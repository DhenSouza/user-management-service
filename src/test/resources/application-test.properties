# Nome da aplicação (opcional, para facilitar logs)
spring.application.name=user-management-service-test

# --- Dados do DataSource de Teste ---
spring.datasource.url=jdbc:postgresql://localhost:5434/userdb_test
spring.datasource.username=administration
spring.datasource.password=admin
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate: deixe o Flyway cuidar do schema
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JWT (mesmas chaves do principal, se você usar tokens nos testes)
security.jwt.secret=hVZSpn47ytq9kCM7zPIYmeNgCWbLogF0eQlVa0tVXTYJDrBKQHX8u
security.jwt.expiration=3600000

# Níveis de log
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE
logging.level.org.springdoc.api=INFO

# --- Flyway Teste apontando para o banco de testes ---
spring.flyway.url=jdbc:postgresql://localhost:5434/userdb_test
spring.flyway.user=administration
spring.flyway.password=admin
spring.flyway.database.driver=org.postgresql.Driver

# Faça o Flyway limpar o schema antes de aplicar as migrations (útil para testes)
spring.flyway.clean-disabled=false
spring.flyway.clean-on-validation-error=true

# Habilita o Flyway
spring.flyway.enabled=true

# Debug de Flyway
logging.level.org.flywaydb.core.internal.command.DbInfo=DEBUG
